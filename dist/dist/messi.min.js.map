{"version":3,"sources":["_main.js","extensions.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfile":"messi.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    function Messi(data, options) {\n\n        var close;\n        var _this = this;\n        _this.options = jQuery.extend({}, Messi.prototype.options, options || {});\n\n        // Resolve the viewport vs prototype option (prototype overrides viewport)\n        if (this.options.position === Messi.prototype.options.position) {\n            _this.options.position = _this.options.viewport;\n        }\n\n        // Prepare the item\n        _this.messi = jQuery(_this.template);\n        _this.setContent(data);\n\n        // Adjust the title\n        if (_this.options.title === null) {\n\n            jQuery('.messi-titlebox', _this.messi)\n                .remove();\n\n        } else {\n\n            jQuery('.messi-title', _this.messi)\n                .append(_this.options.title);\n\n            if (_this.options.buttons.length === 0 && !_this.options.autoclose) {\n\n                // Close button required\n                close = jQuery('<span class=\"messi-closebtn\"></span>');\n                close.bind('click', function () {\n                    _this.hide();\n                });\n\n                jQuery('.messi-titlebox', this.messi)\n                    .prepend(close);\n\n            }\n\n            if (_this.options.titleClass !== null) {\n                jQuery('.messi-titlebox', this.messi)\n                    .addClass(_this.options.titleClass);\n            }\n\n        }\n\n        // Adjust the width\n        if (_this.options.width !== null) {\n            jQuery('.messi-box', _this.messi)\n                .css('width', _this.options.width);\n        }\n\n        // Prepare the buttons\n        if (_this.options.buttons.length > 0) {\n\n            for (var i = 0; i < _this.options.buttons.length; i++) {\n                var btnbox = jQuery('<div>', {'class':'messi-btnbox'})\n                    .css('width', parseInt(100/_this.options.buttons.length, 10) + '%');\n                var cls = (_this.options.buttons[i]['class']) ? _this.options.buttons[i]['class'] : '';\n                var btn = jQuery('<button>', {\n                    href: '#',\n                    'class': 'btn ' + cls,\n                    value: _this.options.buttons[i].val,\n                    'click': function () {\n                        var value = $(this).val();\n\n                        if (typeof _this.options.callback === 'function') {\n                            if (_this.options.callback(value) === false) {\n                                return this;\n                            }\n                        }\n\n                        _this.hide();\n                    }\n                }).text(_this.options.buttons[i].label);\n\n                btnbox.append(btn);\n                jQuery('.messi-actions', this.messi).append(btnbox);\n\n            }\n\n        } else {\n\n            jQuery('.messi-footbox', this.messi)\n                .remove();\n\n        }\n\n        // Prepare the close button automatically\n        if (_this.options.buttons.length === 0 && _this.options.title === null && !_this.options.autoclose) {\n\n            if (_this.options.closeButton) {\n                close = jQuery('<span class=\"messi-closebtn\"></span>');\n                close.bind('click', function () {\n                    _this.hide();\n                });\n\n                jQuery('.messi-content', this.messi)\n                    .prepend(close);\n\n            }\n\n        }\n\n        // Activate the modal screen\n        if (_this.options.modal) {\n            _this.modal = jQuery('<div class=\"messi-modal\"></div>')\n            .css({\n                opacity: _this.options.modalOpacity,\n                width: jQuery(document).width(),\n                height: jQuery(document).height(),\n                position: 'fixed',\n                'z-index': _this.options.zIndex + jQuery('.messi').length\n            })\n            .appendTo(document.body);\n        }\n\n        // Show the message\n        if (_this.options.show) { _this.show(); }\n\n        // Control the resizing of the display\n        jQuery(window).bind('resize scroll', function () {\n            _this.resize();\n        });\n\n        // Configure the automatic closing\n        if (_this.options.autoclose !== null) {\n            setTimeout(function () {\n                var value = jQuery.data(this, 'value');\n                var after = (_this.options.callback !== null) ? function () {\n                        _this.options.callback(value);\n                    } : null;\n                _this.hide();\n            }, _this.options.autoclose, this);\n        }\n\n        return _this;\n\n    }\n\n    Messi.prototype = {\n\n        options: {\n            animate: { show: 'bounceIn', hide: 'bounceOut' },   // default animation (disable by setting animate: false)\n            autoclose: null,                                    // autoclose message after 'x' miliseconds, i.e: 5000\n            buttons: [],                                        // array of buttons, i.e: [{id: 'ok', label: 'OK', val: 'OK'}]\n            callback: null,                                     // callback function after close message\n            center: true,                                       // center message on screen\n            closeButton: true,                                  // show close button in header title (or content if buttons array is empty).\n            height: 'auto',                                     // content height\n            title: null,                                        // message title\n            titleClass: null,                                   // title style: info, warning, success, error\n            margin: 0,                                          // enforce a minimal viewport margin the dialog cannot move outside, set to zero to disable\n            modal: false,                                       // shows message in modal (loads background)\n            modalOpacity: 0.2,                                  // modal background opacity\n            padding: '10px',                                    // content padding\n            position: { top: '0px', left: '0px' },              // if center: false, sets X and Y position\n            show: true,                                         // show message after load\n            unload: true,                                       // unload message after hide\n            viewport: { top: '0px', left: '0px' },              // deprecated, see position\n            width: '500px',                                     // message width\n            zIndex: 99999                                       // first dialog z-index\n        },\n        template: '<div class=\"messi\"><div class=\"messi-box\"><div class=\"messi-wrapper\"><div class=\"messi-titlebox\"><span class=\"messi-title\"></span></div><div class=\"messi-content\"></div><div class=\"messi-footbox\"><div class=\"messi-actions\"></div></div></div></div></div>',\n        content: '<div></div>',\n        visible: false,\n\n        setContent: function (data) {\n            jQuery('.messi-content', this.messi)\n                .css({\n                    padding: this.options.padding,\n                    height: this.options.height\n                })\n                .empty()\n                .append(data);\n        },\n\n        center: function () {\n            this.messi.css({\n                top: ((jQuery(window).height() - this.messi.height()) / 2),\n                left: ((jQuery(window).width() - this.messi.width()) / 2)\n            });\n\n            return this;\n        },\n\n        show: function () {\n\n            if (this.visible) { return; }\n\n            if (this.messi.parent().length === 0) {\n                // or unload in case of first call\n                if (this.modal) {\n                    this.modal.appendTo(document.body);\n                }\n                this.messi.appendTo(document.body);\n            }\n\n            if (this.modal) {\n                this.modal.show();\n            }\n\n            // positioning\n            this.messi.css({\n                top: this.options.position.top,\n                left: this.options.position.left\n            });\n\n            this.messi.css({\n                'zIndex': this.options.zIndex + jQuery('.messi').length\n            });\n\n            // animation\n            if (this.options.animate) {\n                this.messi.addClass('animate '+this.options.animate.show);\n            }\n\n            this.messi.show();\n\n            // Get the center of the screen if the center option is on\n            if (this.options.center) {\n                this.center();\n            } else {\n                this.enforceMargin();\n            }\n\n            // Cancel the scroll\n            //document.documentElement.style.overflow = \"hidden\";\n\n            this.visible = true;\n\n        },\n\n        hide: function () {\n\n            if (!this.visible) { return; }\n            var _this = this;\n\n            if (this.options.animate) {\n                this.messi.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {\n                    _this.visible = false;\n                    if (_this.options.unload) {\n                        _this.unload();\n                    }\n                });\n\n                this.messi.addClass('animate '+this.options.animate.hide);\n            } else {\n                this.messi.animate({\n                    opacity: 0\n                }, 300, function () {\n                    if (_this.options.modal) {\n                        _this.modal.css({\n                            display: 'none'\n                        });\n                    }\n                    _this.messi.css({\n                        display: 'none'\n                    });\n\n                    // Reactivate the scroll\n                    //document.documentElement.style.overflow = \"visible\";\n                    _this.visible = false;\n                    if (_this.options.unload) {\n                        _this.unload();\n                    }\n                });\n            }\n\n            return this;\n\n        },\n\n        resize: function () {\n            if (this.options.modal) {\n                jQuery('.messi-modal')\n                    .css({\n                        width: jQuery(document).width(),\n                        height: jQuery(document).height()\n                    });\n            }\n\n            if (this.options.center) {\n                this.center();\n            } else if(this.options.margin > 0) {\n                this.enforceMargin();\n            }\n        },\n\n        toggle: function () {\n            this[this.visible ? 'hide' : 'show']();\n            return this;\n        },\n\n        unload: function () {\n            if (this.visible) {\n                this.hide();\n            }\n\n            jQuery(window)\n                .unbind('resize scroll');\n\n            if (this.modal) {\n                this.modal.remove();\n            }\n\n            this.messi.remove();\n        },\n\n        // When the dialog is outside the viewport, move it back in.\n        // options.viewport is the center point of the dialog\n        enforceMargin: function () {\n            if (!this.options.margin) { return; }\n\n            var $window = jQuery(window);\n\n            // Backward compatibility hack - remove in version 2.1\n            var x = this.max(\n                parseInt(this.options.viewport.left, 10),\n                parseInt(this.options.position.left, 10)\n            );\n            var y = this.max(\n                parseInt(this.options.viewport.top, 10),\n                parseInt(this.options.position.top, 10)\n            );\n\n            // When the popup is too far on the right, move left\n            if (x + this.messi.width() + this.options.margin > $window.width()) {\n                x = $window.width() - this.options.margin - this.messi.width();\n            }\n\n            // When the popup is too far down, move up\n            if (y + this.messi.height() + this.options.margin > $window.height()) {\n                y = $window.height() - this.options.margin - this.messi.height();\n            }\n\n            // When the popup is too far to the left, move right\n            if (x < this.options.margin) {\n                x = this.options.margin;\n            }\n\n            // When the popup is too far up, move down\n            if (y < this.options.margin) {\n                y = this.options.margin;\n            }\n\n            this.messi.css({ left: x, top: y });\n        },\n\n        jqueryize: function() {\n            return this.messi;\n        },\n\n        max: function (a, b) {\n            if (a > b) { return a; }\n            else { return b; }\n        },\n\n    };\n\n    // Preserve backward compatibility\n    window.Messi = Messi;\n\n})();\n// vim: expandtab shiftwidth=4 tabstop=4 softtabstop=4:\n","jQuery.extend(Messi, {\n\n    alert: function (data, callback, options) {\n\n        var buttons = [{\n            id: 'ok',\n            label: 'OK',\n            val: 'OK'\n        }];\n\n        options = jQuery.extend(\n            { closeButton: false, buttons: buttons, callback: function () {} },\n            options,\n            { show: true, unload: true, callback: callback }\n        );\n\n        return new Messi(data, options);\n\n    },\n\n    ask: function (data, callback, options) {\n\n        var buttons = [\n            { id: 'yes', label: 'Yes', val: 'Y', 'class': 'btn-success' },\n            { id: 'no', label: 'No', val: 'N', 'class': 'btn-danger' }\n        ];\n\n        options = jQuery.extend(\n            { closeButton: false, modal: true, buttons: buttons, callback: function () {} },\n            options,\n            { show: true, unload: true, callback: callback }\n        );\n\n        return new Messi(data, options);\n\n    },\n\n    img: function (src, options) {\n\n        var img = new Image();\n\n        jQuery(img).load(function () {\n\n            var vp = {\n                width: jQuery(window).width() - 50,\n                height: jQuery(window).height() - 50\n            };\n            var ratio = (this.width > vp.width || this.height > vp.height) ?\n                Math.min(vp.width / this.width, vp.height / this.height) :\n                1;\n\n            jQuery(img)\n                .css({\n                    width: this.width * ratio,\n                    height: this.height * ratio\n                });\n\n            options = jQuery.extend(\n                {\n                    show:         true,\n                    unload:       true,\n                    closeButton:  true,\n                    width:        this.width * ratio,\n                    height:       this.height * ratio,\n                    padding:      0\n                },\n                options\n            );\n\n            new Messi(img, options);\n\n        })\n        .error(function () {\n\n            // Be IE friendly\n            if (typeof window.console === 'object') {\n                console.log('Error loading ' + src);\n            }\n\n        })\n        .attr('src', src);\n\n    },\n\n    load: function (url, options) {\n\n        options = jQuery.extend(\n            { show: true, unload: true, params: {} },\n            options\n        );\n\n        var request = {\n            url: url,\n            data: options.params,\n            dataType: 'html',\n            cache: false,\n            error: function (request, status, error) {\n                // Be IE friendly\n                if (typeof window.console === 'object') {\n                    console.log(request.responseText);\n                }\n            },\n            success: function (html) {\n                new Messi(html, options);\n            }\n        };\n\n        jQuery.ajax(request);\n\n    }\n\n});\n"],"sourceRoot":"/source/"}